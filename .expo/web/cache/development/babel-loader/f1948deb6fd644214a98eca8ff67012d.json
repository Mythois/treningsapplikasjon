{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport HomeScreen from \"../screens/mainNavScreens/HomeScreen\";\nimport ProfileScreen from \"../screens/mainNavScreens/ProfileScreen\";\nimport SearchScreen from \"../screens/mainNavScreens/SearchScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar homeName = \"Home\";\nvar profileName = \"Profile\";\nvar searchName = \"Search\";\nvar Tab = createBottomTabNavigator();\nexport default function MainStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: homeName,\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          \"tabBarActiveTintColor\": \"tomato\",\n          \"tabBarInactiveTintColor\": \"grey\",\n          \"tabBarLabelStyle\": {\n            \"fontSize\": 10\n          },\n          \"tabBarItemStyle\": {\n            \"backgroundColor\": \"rgba(10, 10, 10, 1)\"\n          },\n          \"tabBarStyle\": [{\n            \"display\": \"flex\"\n          }, null],\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            var rn = route.name;\n            switch (rn) {\n              case homeName:\n                iconName = focused ? 'home' : 'home-outline';\n                break;\n              case profileName:\n                iconName = focused ? 'person' : 'person-outline';\n                break;\n              case searchName:\n                iconName = 'search';\n                break;\n            }\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'grey',\n        labelStyle: {\n          fontSize: 8\n        },\n        tabStyle: {\n          backgroundColor: 'rgba(10, 10, 10, 1)'\n        }\n      },\n      children: [_jsx(Tab.Screen, {\n        name: homeName,\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: searchName,\n        component: SearchScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: profileName,\n        component: ProfileScreen,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Ionicons","HomeScreen","ProfileScreen","SearchScreen","homeName","profileName","searchName","Tab","MainStack","route","tabBarIcon","focused","color","size","iconName","rn","name","activeTintColor","inactiveTintColor","labelStyle","fontSize","tabStyle","backgroundColor","headerShown"],"sources":["C:/Users/tommy/OneDrive/Documents/school/softwareDevelopment/treningsapplikasjon/navigation/MainStack.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nimport HomeScreen from '../screens/mainNavScreens/HomeScreen';\r\nimport ProfileScreen from '../screens/mainNavScreens/ProfileScreen';\r\nimport SearchScreen from '../screens/mainNavScreens/SearchScreen';\r\n\r\n// Screen Names\r\nconst homeName: any = \"Home\";\r\nconst profileName: any = \"Profile\";\r\nconst searchName: any = \"Search\";\r\n\r\nconst Tab: any = createBottomTabNavigator();\r\n\r\nexport default function MainStack() {\r\n    return (\r\n        <NavigationContainer>\r\n            <Tab.Navigator\r\n                initialRouteName={homeName}\r\n                screenOptions={({ route }) => ({\r\n                    \"tabBarActiveTintColor\": \"tomato\",\r\n                    \"tabBarInactiveTintColor\": \"grey\",\r\n                    \"tabBarLabelStyle\": {\r\n                        \"fontSize\": 10\r\n                    },\r\n                    \"tabBarItemStyle\": {\r\n                        \"backgroundColor\": \"rgba(10, 10, 10, 1)\"\r\n                    },\r\n                    \"tabBarStyle\": [\r\n                        {\r\n                            \"display\": \"flex\"\r\n                        },\r\n                        null\r\n                    ],\r\n\r\n                    tabBarIcon: ({ focused, color, size }) => {\r\n                        let iconName;\r\n                        let rn = route.name;\r\n\r\n                        switch (rn) {\r\n                            case homeName:\r\n                                iconName = focused ? 'home' : 'home-outline'\r\n                                break\r\n                            case profileName:\r\n                                iconName = focused ? 'person' : 'person-outline'\r\n                                break\r\n                            case searchName:\r\n                                iconName = 'search'\r\n                                break\r\n                        }\r\n\r\n                        return <Ionicons name={iconName} size={size} color={color} />\r\n                    }\r\n                })}\r\n                tabBarOptions={{\r\n                    activeTintColor: 'tomato',\r\n                    inactiveTintColor: 'grey',\r\n                    labelStyle: { fontSize: 8 },\r\n                    tabStyle: { backgroundColor: 'rgba(10, 10, 10, 1)', },\r\n                }}\r\n            >\r\n\r\n                <Tab.Screen name={homeName}\r\n                    component={HomeScreen}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Tab.Screen name={searchName}\r\n                    component={SearchScreen}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Tab.Screen name={profileName}\r\n                    component={ProfileScreen}\r\n                    options={{ headerShown: false }}\r\n                />\r\n\r\n            </Tab.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,QAAQ;AAEf,OAAOC,UAAU;AACjB,OAAOC,aAAa;AACpB,OAAOC,YAAY;AAA+C;AAAA;AAGlE,IAAMC,QAAa,GAAG,MAAM;AAC5B,IAAMC,WAAgB,GAAG,SAAS;AAClC,IAAMC,UAAe,GAAG,QAAQ;AAEhC,IAAMC,GAAQ,GAAGR,wBAAwB,EAAE;AAE3C,eAAe,SAASS,SAAS,GAAG;EAChC,OACI,KAAC,mBAAmB;IAAA,UAChB,MAAC,GAAG,CAAC,SAAS;MACV,gBAAgB,EAAEJ,QAAS;MAC3B,aAAa,EAAE;QAAA,IAAGK,KAAK,QAALA,KAAK;QAAA,OAAQ;UAC3B,uBAAuB,EAAE,QAAQ;UACjC,yBAAyB,EAAE,MAAM;UACjC,kBAAkB,EAAE;YAChB,UAAU,EAAE;UAChB,CAAC;UACD,iBAAiB,EAAE;YACf,iBAAiB,EAAE;UACvB,CAAC;UACD,aAAa,EAAE,CACX;YACI,SAAS,EAAE;UACf,CAAC,EACD,IAAI,CACP;UAEDC,UAAU,EAAE,2BAA8B;YAAA,IAA3BC,OAAO,SAAPA,OAAO;cAAEC,KAAK,SAALA,KAAK;cAAEC,IAAI,SAAJA,IAAI;YAC/B,IAAIC,QAAQ;YACZ,IAAIC,EAAE,GAAGN,KAAK,CAACO,IAAI;YAEnB,QAAQD,EAAE;cACN,KAAKX,QAAQ;gBACTU,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;gBAC5C;cACJ,KAAKN,WAAW;gBACZS,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;gBAChD;cACJ,KAAKL,UAAU;gBACXQ,QAAQ,GAAG,QAAQ;gBACnB;YAAK;YAGb,OAAO,KAAC,QAAQ;cAAC,IAAI,EAAEA,QAAS;cAAC,IAAI,EAAED,IAAK;cAAC,KAAK,EAAED;YAAM,EAAG;UACjE;QACJ,CAAC;MAAA,CAAE;MACH,aAAa,EAAE;QACXK,eAAe,EAAE,QAAQ;QACzBC,iBAAiB,EAAE,MAAM;QACzBC,UAAU,EAAE;UAAEC,QAAQ,EAAE;QAAE,CAAC;QAC3BC,QAAQ,EAAE;UAAEC,eAAe,EAAE;QAAuB;MACxD,CAAE;MAAA,WAGF,KAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAElB,QAAS;QACvB,SAAS,EAAEH,UAAW;QACtB,OAAO,EAAE;UAAEsB,WAAW,EAAE;QAAM;MAAE,EAClC,EACF,KAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAEjB,UAAW;QACzB,SAAS,EAAEH,YAAa;QACxB,OAAO,EAAE;UAAEoB,WAAW,EAAE;QAAM;MAAE,EAClC,EACF,KAAC,GAAG,CAAC,MAAM;QAAC,IAAI,EAAElB,WAAY;QAC1B,SAAS,EAAEH,aAAc;QACzB,OAAO,EAAE;UAAEqB,WAAW,EAAE;QAAM;MAAE,EAClC;IAAA;EAEU,EACE;AAE9B"},"metadata":{},"sourceType":"module"}